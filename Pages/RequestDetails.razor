@page "/admin/request-details/{RequestId}"
@using stunt.Models
@inject NavigationManager NavManager

<link href="https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap" rel="stylesheet">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap" rel="stylesheet">

<div class="d-flex flex-column justify-content-start align-items-center pt-5 pb-5 bg-light" style="min-height: 100vh;">
    <div class="shadow-lg p-5 bg-white rounded" style="width: 80%; max-width: 600px;">
        <div class="d-flex justify-content-center align-items-center mb-4">
            <img src="@request.ImageUrl" alt="@request.Name" class="img-fluid rounded-circle" style="width: 100px; height: 100px; object-fit: cover; margin-right: 20px;">
            <h3 class="text-primary">@request.Name</h3>
        </div>

        <div class="details">
            <p><strong>Nome: </strong>@request.Name</p>
            <p><strong>Universidade: </strong>@request.University</p>
            <p><strong>Cidade de Destino: </strong>@request.CityOfDestination</p>
            <p><strong>Status: </strong>@ConvertStatus(@request.Status)</p>
            <div class="mb-3">
                <label><strong>Documentos Anexos: </strong></label>
                <ul>
                    <li><a href="documents/documento_identificacao.pdf" download>Documento de identificação</a></li>
                    <li><a href="documents/comprovante_residencia.pdf" download>Comprovante de Residência</a></li>
                    <li><a href="documents/atestado_matricula.pdf" download>Atestado de Matrícula</a></li>
                    <li><a href="documents/atestado_frequencia.pdf" download>Atestado de Frequência</a></li>
                </ul>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <button @onclick="ApproveRequest" class="btn btn-primary">Aprovar</button>
            <button @onclick="DenyRequest" class="btn btn-danger ml-2">Negar</button>
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Roboto';
        background-color: #eaf6ff;
    }

    .bg-light {
        background-color: #fbeec1 !important;
    }

    h3 {
        color: #ffab40;
        font-family: 'Roboto';
        font-weight: bold;
    }

    .btn {
        border-radius: 25px;
        margin: 5px;
        transition: transform 0.3s ease-out;
    }

    .btn:hover {
        transform: scale(1.1);
    }
</style>

@code {
    [Parameter] public string? RequestId { get; set; }
    private Request request;

    protected override async Task OnInitializedAsync()
    {
        request = Mock.Data.Requests.FirstOrDefault(x => x.Id == int.Parse(RequestId)) ?? new Request();
    }

    private string ConvertStatus(RequestStatus status)
    {
        switch (status)
        {
            case RequestStatus.Processing:
                return "Aguardando Documentos";
            case RequestStatus.Processed:
                return "Finalizado";
            case RequestStatus.Incoming:
                return "Aberto";
            default:
                return "Não definido";
        };
    }

    private async Task ApproveRequest()
    {
        this.request.Status = RequestStatus.Processed;
        SaveAndSync();
    }

    private async Task DenyRequest()
    {
        this.request.Status = RequestStatus.Processing;
        SaveAndSync();
    }

    private void SaveAndSync()
    {
        var old = Mock.Data.Requests.First(x => x.Id == request.Id);
        Mock.Data.Requests.Remove(old);
        Mock.Data.Requests.Add(request);
        NavManager.NavigateTo("/admin/requests");
    }
}
