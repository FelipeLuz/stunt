@page "/admin/requests"
@using stunt.Models
@inject NavigationManager NavManager

<link href="https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap" rel="stylesheet">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap" rel="stylesheet">

<div class="d-flex flex-column justify-content-start align-items-center pt-5 pb-5 bg-light" style="min-height: 100vh;">
    <div class="shadow-lg p-5 bg-white rounded" style="width: 80%; max-width: 1000px;">
        <h3 class="text-center mb-4">Portal do Administrador: Solicitações</h3>

        <!-- Tabs -->
        <ul class="nav nav-pills justify-content-center mb-3">
            <li class="nav-item">
                <button @onclick="SetActiveTabIncoming"
                    class="btn @(activeTab == "incoming" ? "active btn-primary" : "btn-outline-primary")">Novo</button>
            </li>
            <li class="nav-item">
                <button @onclick="SetActiveTabProcessing"
                    class="btn @(activeTab == "processing" ? "active btn-primary" : "btn-outline-primary")">Em
                    Processamento</button>
            </li>
            <li class="nav-item">
                <button @onclick="SetActiveTabProcessed"
                    class="btn @(activeTab == "processed" ? "active btn-primary" : "btn-outline-primary")">Processadas</button>
            </li>
        </ul>

        <!-- Tab Content -->
                <div class="tab-content mt-3 justify-content-center align-items-center">
            @foreach (var tab in new[] { "incoming", "processing", "processed" })
            {
                <div class="tab-pane @(activeTab == tab ? "active" : "")" id="@tab">
                    <div class="row">
                        @foreach (var request in requests.Where(r => r.Status.ToString().ToLower() == tab))
                        {
                            <div class="col-md-4 mb-3">
                                <div class="card shadow-sm">
                                    <div class="row g-0">
                                        <div class="col-md-4 d-flex align-items-center" style="padding: 20px">
                                            <img src="@request.ImageUrl" alt="@request.Name" class="img-fluid rounded" style="width: 60px; height: 60px; object-fit: cover;">
                                        </div>
                                        <div class="col-md-8">
                                            <div class="card-body py-2">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <h5 class="card-title mb-1">@request.Name</h5>
                                                        <p class="card-text mb-0"><i class="bi bi-building"></i> @request.University</p>
                                                        <p class="card-text mb-0"><i class="bi bi-geo-alt"></i> @request.CityOfDestination</p>
                                                    </div>
                                                    <button @onclick="() => GoToDetails(request.Id)" class="btn btn-sm btn-primary align-self-center">Detalhes</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Roboto';
        background-color: #eaf6ff;
    }

    .rounded {
        border-radius: 15px;
    }

    .bg-light {
        background-color: #fbeec1 !important;
    }

    h3 {
        color: #ffab40;
        font-family: 'Roboto';
        font-weight: bold;
    }

    .nav-link {
        transition: transform 0.3s ease-out;
        border-radius: 25px;
        font-family: 'Roboto';
        font-weight: bold;
    }

    .nav-link:hover {
        transform: scale(1.1);
    }

    .nav-link.bg-light {
        color: #000;
    }

    .btn-primary,
    .btn-outline-primary {
        border-radius: 25px;
        margin: 5px;
        transition: transform 0.3s ease-out;
    }

    .btn-primary:hover {
        transform: scale(1.1);
    }

    .btn-primary {
        border-radius: 25px;
        margin: 5px;
        transition: transform 0.3s ease-out;
    }

    .btn-primary:hover {
        transform: scale(1.1);
    }

    .card {
        border-radius: 20px;
        /* Added a larger border-radius for a softer look */
    }

    .ghibli-text {
        color: #7b5544;
        /* A Ghibli-style color, adjust as needed */
        font-weight: bold;
    }
</style>

@code {
    private void SetActiveTabIncoming() => SetActiveTab("incoming");
    private void SetActiveTabProcessing() => SetActiveTab("processing");
    private void SetActiveTabProcessed() => SetActiveTab("processed");

    private string activeTab = "incoming";

    private void SetActiveTab(string tab)
    {
        activeTab = tab;
    }

    private void GoToDetails(int id)
    {
        NavManager.NavigateTo($"/admin/request-details/{id}");
    }

    private List<Request> requests = Mock.Data.Requests;
    
}
